export declare const createPluginState: (dispatch: import("@atlaskit/editor-common/event-dispatcher").Dispatch<any>, initialState: import("./types").FloatingToolbarPluginData | ((state: import("prosemirror-state").EditorState<any>) => import("./types").FloatingToolbarPluginData)) => import("prosemirror-state").SafeStateField<import("./types").FloatingToolbarPluginData, import("prosemirror-model").Schema<any, any>>, createCommand: <A = import("./types").FloatingToolbarPluginAction>(action: A | ((state: Readonly<import("prosemirror-state").EditorState<any>>) => false | A), transform?: ((tr: import("prosemirror-state").Transaction<any>, state: import("prosemirror-state").EditorState<any>) => import("prosemirror-state").Transaction<any>) | undefined) => import("@atlaskit/editor-common/types").Command, getPluginState: (state: import("prosemirror-state").EditorState<any>) => import("./types").FloatingToolbarPluginData;
