import { PluginKey } from 'prosemirror-state';
export declare const pluginKey: PluginKey<any, any>;
export declare const createPluginState: (dispatch: import("@atlaskit/editor-common/event-dispatcher").Dispatch<any>, initialState: import("../types").PastePluginState | ((state: import("prosemirror-state").EditorState<any>) => import("../types").PastePluginState)) => import("prosemirror-state").SafeStateField<import("../types").PastePluginState, import("prosemirror-model").Schema<any, any>>, createCommand: <A = import("../actions").PastePluginAction>(action: A | ((state: Readonly<import("prosemirror-state").EditorState<any>>) => false | A), transform?: ((tr: import("prosemirror-state").Transaction<any>, state: import("prosemirror-state").EditorState<any>) => import("prosemirror-state").Transaction<any>) | undefined) => import("@atlaskit/editor-common/types").Command, getPluginState: (state: import("prosemirror-state").EditorState<any>) => import("../types").PastePluginState;
